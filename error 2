--------------------------------------------------
-- Step 6a: Insert into ETLClientInfo for testing
--------------------------------------------------

DECLARE @sql NVARCHAR(MAX);
DECLARE @DB sysname;
DECLARE @DBLevel NVARCHAR(250);
DECLARE @SourceColExists BIT;

-- Cursor to loop through databases
DECLARE curDB CURSOR FORWARD_ONLY STATIC
FOR  
    SELECT [name]   
    FROM sys.databases 
    WHERE [name] NOT IN ('master','model','msdb','tempdb','DefaultDB','admindba','iws_admin') 
      AND name NOT LIKE '%SP'
      AND name NOT LIKE '%snapshot%'
      AND name NOT LIKE '%stg'
      AND name NOT LIKE '%_old'
      AND state_desc NOT LIKE '%RESTORING%'
    ORDER BY [name];

OPEN curDB;  
FETCH NEXT FROM curDB INTO @DB;  

WHILE @@FETCH_STATUS = 0  
BEGIN 
    BEGIN TRY
        -- Only proceed if ETL_Configuration exists in this DB
        IF OBJECT_ID('['+@DB+'].dbo.ETL_Configuration') IS NOT NULL  
        BEGIN 
            -- Check if SourceCode column exists
            SET @SourceColExists = 0;
            IF COL_LENGTH('['+@DB+'].dbo.ETL_Configuration', 'SourceCode') IS NOT NULL
                SET @SourceColExists = 1;

            -- Insert decrypted passwords into ETLClientInfo
            SET @sql = N'
            INSERT INTO admindba.dbo.ETLClientInfo (DatabaseName, ClientCode, PasswordHash, pwd, ClientName, ServerName)
            SELECT 
                t.DatabaseName,
                t.ClientCode,
                CONVERT(VARBINARY(256), t.ftppass) AS PasswordHash,
                t.ftppass AS pwd,
                c.ClientName,
                @@SERVERNAME AS ServerName
            FROM admindba.dbo.ETLTempTable t
            OUTER APPLY (
                SELECT TOP 1 c.ClientName
                FROM admindba.dbo.Client c
                WHERE c.IsActive = 1
                  AND (
                        c.ClientDBPrefix = t.DatabaseName
                        OR c.ClientDBPrefix = CASE WHEN t.DatabaseName LIKE ''%PRD'' THEN LEFT(t.DatabaseName, LEN(t.DatabaseName) - 3) END
                        OR c.ClientDBPrefix = CASE WHEN t.DatabaseName LIKE ''%UAT'' THEN LEFT(t.DatabaseName, LEN(t.DatabaseName) - 3) END
                      )
                ORDER BY c.ClientName
            ) c
            WHERE t.ftppass IS NOT NULL;';

            EXEC (@sql);
        END
    END TRY
    BEGIN CATCH
        PRINT 'Error processing database: ' + @DB + ' | ' + ERROR_MESSAGE();
    END CATCH;

    FETCH NEXT FROM curDB INTO @DB;  
END  

CLOSE curDB;  
DEALLOCATE curDB;

-- Verify inserted data
SELECT TOP 50 *
FROM admindba.dbo.ETLClientInfo
ORDER BY DatabaseName, ClientCode;
