ALTER PROCEDURE [dbo].[ETLClientUpdate]
AS
BEGIN
    SET NOCOUNT ON;

    ----------------------------------------------------------------------------------
    -- Step 0: Update IsActive flag based on whether DXRA job exists & is enabled
    ----------------------------------------------------------------------------------
    UPDATE T
    SET IsActive =
        CASE 
            WHEN J.job_id IS NOT NULL AND J.enabled = 1 THEN 1
            ELSE 0
        END
    FROM dbo.ETLClientInfo T
    LEFT JOIN msdb.dbo.sysjobs J
        ON (
               J.name LIKE 'DXRA%' 
           AND (
                   J.name LIKE '%' + T.ClientCode + '%'
                OR J.name LIKE '%' + T.DatabaseName + '%'
               )
           );

    ----------------------------------------------------------------------------------
    -- Step 1: Clear columns before insert
    ----------------------------------------------------------------------------------
    UPDATE dbo.ETLClientInfo
    SET 
        Message   = NULL,
        EventDate = NULL,
        Status    = NULL,
        JobName   = NULL;

    ----------------------------------------------------------------------------------
    -- Step 2: Insert only the last run per job
    ----------------------------------------------------------------------------------
    UPDATE T
    SET 
        T.JobName   = SJ.name,
        T.Message   = SJH.message,
        T.EventDate = DATEADD(S, 
                        (SJH.run_time / 10000) * 60 * 60 + 
                        ((SJH.run_time - (SJH.run_time / 10000) * 10000) / 100) * 60 + 
                        (SJH.run_time - (SJH.run_time / 100) * 100), 
                        CONVERT(DATETIME, RTRIM(SJH.run_date), 113)),
        T.Status    = CASE 
                        WHEN SJH.run_status = 0 THEN 'Failed'
                        WHEN SJH.run_status = 1 THEN 'Succeeded'
                        WHEN SJH.run_status = 2 THEN 'Retry'
                        WHEN SJH.run_status = 3 THEN 'Cancelled'
                        ELSE 'Unknown'
                      END
    FROM dbo.ETLClientInfo T
    JOIN msdb..sysjobs SJ
        ON SJ.name LIKE '%' + T.ClientCode + '%'
        OR SJ.name LIKE '%' + T.DatabaseName + '%'
    CROSS APPLY (
        SELECT TOP 1 *
        FROM msdb..sysjobhistory H
        WHERE H.job_id = SJ.job_id
          AND H.step_id = 0
        ORDER BY H.run_date DESC, H.run_time DESC
    ) SJH
    WHERE SJ.name LIKE 'DXRA%'
      AND T.IsActive = 1;

    ----------------------------------------------------------------------------------
    -- Step 3: Handle Failed Clients, Rerun Jobs, Log Errors
    ----------------------------------------------------------------------------------
    CREATE TABLE #ETLFailedLog (
        ClientCode NVARCHAR(50),
        DatabaseName SYSNAME,
        JobName NVARCHAR(128),
        ServerName NVARCHAR(128),
        Message NVARCHAR(MAX),
        Status NVARCHAR(20),
        EventDate DATETIME DEFAULT GETDATE()
    );

    DECLARE @SQL NVARCHAR(MAX) = N'';

    SELECT @SQL = STRING_AGG(
    N'
    BEGIN TRY
        USE ' + QUOTENAME(DatabaseName) + N';

        IF EXISTS (SELECT * FROM sys.symmetric_keys WHERE name = ''FTPPSWDKey'')
            DROP SYMMETRIC KEY FTPPSWDKey;

        IF EXISTS (SELECT * FROM sys.certificates WHERE name = ''CertificateETLFTP'')
            DROP CERTIFICATE CertificateETLFTP;

        IF EXISTS (SELECT * FROM sys.symmetric_keys WHERE name = ''##MS_DatabaseMasterKey##'')
            DROP MASTER KEY;

        DECLARE @ReturnMessage NVARCHAR(MAX);
        EXEC [dbo].[BI_spCreateCertificateKey] @ReturnMessage OUTPUT;

        EXEC [dbo].[BI_spETLConfigurationInsert] 
            @clientid    = ''' + REPLACE(ClientCode, '''', '''''') + ''',
            @FtpPassword = ''' + REPLACE(ISNULL(Pwd, ''), '''', '''''') + '''; 

        USE msdb;
        EXEC msdb.dbo.sp_start_job @job_name = ' + QUOTENAME(JobName, '''') + N';

    END TRY
    BEGIN CATCH
        INSERT INTO #ETLFailedLog (ClientCode, DatabaseName, JobName, ServerName, Message, Status)
        VALUES (
            ''' + REPLACE(ClientCode, '''', '''''') + N''', 
            ''' + REPLACE(DatabaseName, '''', '''''') + N''', 
            ''' + REPLACE(JobName, '''', '''''') + N''', 
            ''' + REPLACE(ServerName, '''', '''''') + N''', 
            ERROR_MESSAGE(),
            ''Failed''
        );
    END CATCH
    ', CHAR(13)+CHAR(10))
    FROM dbo.ETLClientInfo
    WHERE Status = 'Failed'
      AND IsActive = 1;

    IF @SQL IS NOT NULL
        EXEC sp_executesql @SQL;

    ----------------------------------------------------------------------------------
    -- Step 4: Send HTML Email Report for Failed Clients Only
    ----------------------------------------------------------------------------------
    IF EXISTS (SELECT 1 FROM #ETLFailedLog)
    BEGIN
        DECLARE @body NVARCHAR(MAX);
        DECLARE @ServerNames NVARCHAR(MAX);
        DECLARE @subject NVARCHAR(512);

        -- Get distinct server names safely
        SELECT @ServerNames = STRING_AGG(ServerName, ', ')
        FROM (SELECT DISTINCT ServerName FROM #ETLFailedLog) AS T;

        -- Build HTML body
        SET @body = 
        N'<h3>ETL Execution Report for Failed Clients</h3>' +
        N'<table border="1" cellpadding="5" cellspacing="0" style="border-collapse:collapse;">' +
        N'<tr style="background-color:lightblue;">
<th>ClientCode</th><th>ServerName</th><th>DatabaseName</th>
<th>JobName</th><th>Message</th><th>Status</th><th>EventDate</th></tr>' +
        (
            SELECT STRING_AGG(
                N'<tr><td>' + ISNULL(REPLACE(ClientCode, '''', ''''''), '') + N'</td>' +
                N'<td>' + ISNULL(REPLACE(ServerName, '''', ''''''), '') + N'</td>' +
                N'<td>' + ISNULL(REPLACE(DatabaseName, '''', ''''''), '') + N'</td>' +
                N'<td>' + ISNULL(REPLACE(JobName, '''', ''''''), '') + N'</td>' +
                N'<td>' + ISNULL(REPLACE(Message, '''', ''''''), '') + N'</td>' +
                N'<td>' + ISNULL(Status, '') + N'</td>' +
                N'<td>' + ISNULL(CONVERT(VARCHAR(20), EventDate, 120), '') + N'</td></tr>'
            , CHAR(13)+CHAR(10))
            FROM #ETLFailedLog
        );

        SET @body = @body + N'</table>';

        -- Build subject safely
        SET @subject = N'ETL Execution Report - Failed Clients Only'
                       + CASE WHEN @ServerNames IS NOT NULL THEN N' | Servers: ' + @ServerNames ELSE N'' END;

        -- Send email
        EXEC msdb.dbo.sp_send_dbmail
            @profile_name = 'DBA',  -- replace with your Database Mail profile
            @recipients   = 'luiza.vladescu@Fisglobal.com;meeth.dharod@Fisglobal.com;shivam.gupta3@fisglobal.com',
            @subject      = @subject,
            @body         = @body,
            @body_format  = 'HTML';
    END
END
GO
