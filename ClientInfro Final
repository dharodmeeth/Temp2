--------------------------------------------------------------------
--Script 1
--------------------------------------------------------------------

DECLARE @sql NVARCHAR(MAX);
DECLARE @DB sysname;
DECLARE @DBLevel NVARCHAR(250);
DECLARE @SourceColExists BIT;

-- Step 1: Populate ETLTempTable
DECLARE curDB CURSOR FORWARD_ONLY STATIC
FOR  
    SELECT [name]   
    FROM sys.databases 
    WHERE [name] NOT IN ('master','model','msdb','tempdb','DefaultDB','admindba','iws_admin') 
      AND name NOT LIKE '%SP'
      AND name NOT LIKE '%snapshot%'
      AND name NOT LIKE '%stg'
      AND name NOT LIKE '%_old'
      AND state_desc NOT LIKE '%RESTORING%'
    ORDER BY [name];

OPEN curDB  
FETCH NEXT FROM curDB INTO @DB  

WHILE @@FETCH_STATUS = 0  
BEGIN 
    BEGIN TRY
        IF OBJECT_ID('['+@DB+'].dbo.ETL_Configuration') IS NOT NULL  
        BEGIN 
            SET @SourceColExists = 0;
            IF COL_LENGTH('['+@DB+'].dbo.ETL_Configuration', 'SourceCode') IS NOT NULL
                SET @SourceColExists = 1;

            SET @sql = N'
            USE ['+@DB+'];
            WITH FtpPasswords AS
            (
                SELECT 
                    ConfigurationName,
                    CONVERT(NVARCHAR(MAX), DECRYPTBYKEYAUTOCERT(
                        CERT_ID(''CertificateETLFTP''), NULL, ConfigurationEncrypted
                    )) AS ftppass,
                    ROW_NUMBER() OVER (ORDER BY ConfigurationName) AS rn
                FROM dbo.ETL_Configuration
                WHERE ConfigurationName LIKE ''ftpPassword%''
            ),
            ClientCodes AS
            (
                SELECT ' + 
                    CASE WHEN @SourceColExists = 1 
                        THEN 'CASE 
                                  WHEN SourceCode IS NOT NULL AND LTRIM(RTRIM(SourceCode)) <> '''' 
                                  THEN SourceCode 
                                  ELSE (SELECT TOP 1 ConfigurationValue FROM dbo.ETL_Configuration WHERE ConfigurationName LIKE ''ClientID%'') 
                              END AS ClientCode'
                        ELSE '(SELECT TOP 1 ConfigurationValue FROM dbo.ETL_Configuration WHERE ConfigurationName LIKE ''ClientID%'') AS ClientCode'
                    END + ',
                    ROW_NUMBER() OVER (ORDER BY ConfigurationName) AS rn
                FROM dbo.ETL_Configuration
                WHERE ConfigurationName LIKE ''ftpPassword%''
            )
            INSERT INTO admindba.dbo.ETLTempTable (DatabaseName, ClientCode, ftppass)
            SELECT 
                '''+@DB+''' AS DatabaseName,
                c.ClientCode,
                f.ftppass
            FROM FtpPasswords f
            JOIN ClientCodes c ON f.rn = c.rn;';
            
            EXEC (@sql);
        END
    END TRY
    BEGIN CATCH
        --PRINT ''Error processing database: ' + @DB + ' | ' + ERROR_MESSAGE();
    END CATCH

    FETCH NEXT FROM curDB INTO @DB  
END  

CLOSE curDB  
DEALLOCATE curDB;

--------------------------------------------------------------------
--Script 2
--------------------------------------------------------------------
--------------------------------------------------
-- Step 6a: Insert into ETLClientInfo with ClientName
--------------------------------------------------

;WITH ToInsert AS
(
    SELECT 
        t.DatabaseName,
        t.ClientCode,
        CONVERT(VARBINARY(256), t.ftppass) AS PasswordHash,
        t.ftppass AS pwd,
        c.ClientName
    FROM admindba.dbo.ETLTempTable t
    OUTER APPLY (
        SELECT TOP 1 c.ClientName
        FROM admindba.dbo.Client c
        WHERE c.IsActive = 1
          AND (
                -- Match DatabaseName directly
                c.ClientDBPrefix = t.DatabaseName
                -- Match DBName without PRD suffix
                OR c.ClientDBPrefix = CASE 
                                          WHEN t.DatabaseName LIKE '%PRD' 
                                          THEN LEFT(t.DatabaseName, LEN(t.DatabaseName) - 3) 
                                     END
                -- Match DBName without UAT suffix
                OR c.ClientDBPrefix = CASE 
                                          WHEN t.DatabaseName LIKE '%UAT' 
                                          THEN LEFT(t.DatabaseName, LEN(t.DatabaseName) - 3) 
                                     END
              )
        ORDER BY c.ClientName
    ) c
    WHERE t.ftppass IS NOT NULL
)
INSERT INTO admindba.dbo.ETLClientInfo
    (DatabaseName, ClientCode, PasswordHash, pwd, ClientName)
SELECT 
    DatabaseName,
    ClientCode,
    PasswordHash,
    pwd,
    ClientName
FROM ToInsert;

--------------------------------------------------
-- Step 6b: Update ServerName and EtlVersion
--------------------------------------------------

DECLARE @sql NVARCHAR(MAX);
DECLARE @DB sysname;
DECLARE curDB2 CURSOR FOR
    SELECT DISTINCT DatabaseName
    FROM admindba.dbo.ETLClientInfo;

OPEN curDB2
FETCH NEXT FROM curDB2 INTO @DB

WHILE @@FETCH_STATUS = 0
BEGIN
    BEGIN TRY
        -- Dynamic SQL to get dbLevel from each database
        SET @sql = N'
        UPDATE admindba.dbo.ETLClientInfo
        SET 
            ServerName = @@SERVERNAME,
            EtlVersion = (SELECT TOP 1 ConfigurationValue 
                          FROM [' + @DB + '].dbo.ETL_Configuration 
                          WHERE ConfigurationName = ''dbLevel'')
        WHERE DatabaseName = ''' + @DB + ''';';
        
        EXEC(@sql);
    END TRY
    BEGIN CATCH
        --PRINT ''Error updating EtlVersion/ServerName for database: ' + @DB + ' | ' + ERROR_MESSAGE();
    END CATCH

    FETCH NEXT FROM curDB2 INTO @DB
END

CLOSE curDB2
DEALLOCATE curDB2;

--------------------------------------------------
-- Verification
--------------------------------------------------
SELECT TOP 50 *
FROM admindba.dbo.ETLClientInfo
ORDER BY DatabaseName, ClientCode;

--------------------------------------------------------------------
--Script 3
--------------------------------------------------------------------
DECLARE @DB sysname;
DECLARE @sql NVARCHAR(MAX);

DECLARE curDB CURSOR FOR
SELECT DISTINCT DatabaseName
FROM admindba.dbo.ETLClientInfo;

OPEN curDB;
FETCH NEXT FROM curDB INTO @DB;

WHILE @@FETCH_STATUS = 0
BEGIN
    BEGIN TRY
        SET @sql = N'
            UPDATE ci
            SET ci.FtpUserName = ftp.ConfigurationValue
            FROM admindba.dbo.ETLClientInfo ci
            OUTER APPLY
            (
                SELECT TOP 1 c.ConfigurationValue
                FROM [' + @DB + '].dbo.ETL_Configuration c
                WHERE c.ConfigurationName = ''ftpUserName''
                  AND EXISTS (
                      SELECT 1
                      FROM [' + @DB + '].dbo.ETL_Configuration cid
                      WHERE cid.ConfigurationName LIKE ''ClientID%''
                        AND cid.ConfigurationValue = ci.ClientCode
                  )
            ) ftp
            WHERE ci.DatabaseName = ''' + @DB + ''';';

        EXEC (@sql);
    END TRY
    BEGIN CATCH
        PRINT 'Error updating database: ' + @DB + ' | ' + ERROR_MESSAGE();
    END CATCH;

    FETCH NEXT FROM curDB INTO @DB;
END

CLOSE curDB;
DEALLOCATE curDB;

-- Verify results
SELECT DatabaseName, ClientCode, FtpUserName
FROM admindba.dbo.ETLClientInfo
ORDER BY DatabaseName, ClientCode;
