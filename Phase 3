----------------------------------------------------------------------------------
-- Step 3 & 4: Handle Failed Clients, Rerun Jobs, Log Errors, Send HTML Email Report
-- Added 'Status' column
----------------------------------------------------------------------------------

-- Temporary table for logging only failed clients
CREATE TABLE #ETLFailedLog (
    ClientCode NVARCHAR(50),
    DatabaseName SYSNAME,
    JobName NVARCHAR(128),
    ServerName NVARCHAR(128),
    Message NVARCHAR(MAX),
    Status NVARCHAR(20),
    EventDate DATETIME DEFAULT GETDATE()
);

DECLARE @SQL NVARCHAR(MAX) = N'';

-- Build dynamic batch for all failed + active clients
SELECT @SQL = STRING_AGG(
'
BEGIN TRY
    -- Switch to client database safely
    USE ' + QUOTENAME(DatabaseName) + ';

    -- Drop keys/certificates if exist
    IF EXISTS (SELECT * FROM sys.symmetric_keys WHERE name = ''FTPPSWDKey'')
        DROP SYMMETRIC KEY FTPPSWDKey;

    IF EXISTS (SELECT * FROM sys.certificates WHERE name = ''CertificateETLFTP'')
        DROP CERTIFICATE CertificateETLFTP;

    IF EXISTS (SELECT * FROM sys.symmetric_keys WHERE name = ''##MS_DatabaseMasterKey##'')
        DROP MASTER KEY;

    -- Create new certificate/key
    DECLARE @ReturnMessage NVARCHAR(MAX);
    EXEC [dbo].[BI_spCreateCertificateKey] @ReturnMessage OUTPUT;
    SELECT @ReturnMessage;

    -- Insert configuration
    EXEC [dbo].[BI_spETLConfigurationInsert] 
        @clientid    = ''' + QUOTENAME(ClientCode, '''') + ''',
        @FtpPassword = ''' + CONVERT(VARCHAR(256), PasswordHash) + '''; 

    -- Rerun the SQL Agent job asynchronously
    USE msdb;
    EXEC msdb.dbo.sp_start_job @job_name = ' + QUOTENAME(JobName, '''') + ';

END TRY
BEGIN CATCH
    -- Log only failed clients
    INSERT INTO #ETLFailedLog (ClientCode, DatabaseName, JobName, ServerName, Message, Status)
    VALUES (
        ''' + REPLACE(ClientCode, '''', '''''') + ''', 
        ''' + REPLACE(DatabaseName, '''', '''''') + ''', 
        ''' + REPLACE(JobName, '''', '''''') + ''', 
        ''' + REPLACE(HostedServerName, '''', '''''') + ''', 
        ERROR_MESSAGE(),
        ''Failed''
    );
END CATCH
', CHAR(13)+CHAR(10))
FROM dbo.ETLClientInfo
WHERE Status = 'Failed'
  AND IsActive = 1;

-- Execute the batch
EXEC sp_executesql @SQL;

----------------------------------------------------------------------------------
-- Step 4: Send HTML Email Report for Failed Clients Only
----------------------------------------------------------------------------------
DECLARE @body NVARCHAR(MAX);

-- Prepare HTML email body
SET @body = 
N'<h3>Step 3 Execution Report for Failed Clients</h3>' +
N'<table border="1" cellpadding="5" cellspacing="0" style="border-collapse:collapse;">' +
N'<tr style="background-color:lightblue;"><th>ClientCode</th><th>ServerName</th><th>DatabaseName</th><th>JobName</th><th>Message</th><th>Status</th><th>EventDate</th></tr>' +
(
    SELECT STRING_AGG(
        '<tr><td>' + QUOTENAME(ClientCode, '''') + '</td>' +
        '<td>' + QUOTENAME(ServerName, '''') + '</td>' +
        '<td>' + QUOTENAME(DatabaseName, '''') + '</td>' +
        '<td>' + QUOTENAME(JobName, '''') + '</td>' +
        '<td>' + REPLACE(REPLACE(ISNULL(Message, ''), ''<'', ''&lt;'') , ''>'', ''&gt;'') + '</td>' +
        '<td>' + Status + '</td>' +
        '<td>' + CONVERT(VARCHAR(20), EventDate, 120) + '</td></tr>'
    , CHAR(13)+CHAR(10))
    FROM #ETLFailedLog
);

SET @body = @body + '</table>';

-- Send email
EXEC msdb.dbo.sp_send_dbmail
    @profile_name = 'YourMailProfile',                       -- replace with your DB Mail profile
    @recipients   = 'person1@example.com;person2@example.com',  -- replace with recipients
    @subject      = 'ETL Step 3 Execution Report - Failed Clients Only',
    @body         = @body,
    @body_format  = 'HTML';

-- Temporary table will drop automatically at session end
