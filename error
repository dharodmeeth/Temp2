DECLARE @sql NVARCHAR(MAX), @DBLevel NVARCHAR(250);
DECLARE @DB sysname;

DECLARE curDB CURSOR FORWARD_ONLY STATIC
FOR  
    SELECT [name]   
    FROM sys.databases 
    WHERE [name] NOT IN ('master','model','msdb','tempdb','DefaultDB','admindba','iws_admin') 
      AND name NOT LIKE '%SP'
      AND name NOT LIKE '%snapshot%'
      AND name NOT LIKE '%stg'
      AND name NOT LIKE '%_old'
      AND state_desc NOT LIKE '%RESTORING%'
    ORDER BY [name];

OPEN curDB  
FETCH NEXT FROM curDB INTO @DB  

WHILE @@FETCH_STATUS = 0  
BEGIN 
    BEGIN TRY
        IF OBJECT_ID('['+@DB+'].dbo.ETL_Configuration') IS NOT NULL  
        BEGIN 
            IF COL_LENGTH('['+@DB+'].dbo.ETL_Configuration', 'ConfigurationEncrypted') IS NOT NULL
            BEGIN
                -- Single insert to populate ClientCode, ftppass, and FtpUserName in the same row
                SET @sql = N'
                USE ['+@DB+'];
                WITH FtpPasswords AS
                (
                    SELECT 
                        ConfigurationName,
                        CONVERT(NVARCHAR(MAX), DECRYPTBYKEYAUTOCERT(
                            CERT_ID(''CertificateETLFTP''), NULL, ConfigurationEncrypted
                        )) AS ftppass,
                        ROW_NUMBER() OVER (ORDER BY ConfigurationName) AS rn
                    FROM dbo.ETL_Configuration
                    WHERE ConfigurationName LIKE ''ftpPassword%''
                ),
                ClientCodes AS
                (
                    SELECT 
                        ConfigurationValue AS ClientCode,
                        ROW_NUMBER() OVER (ORDER BY ConfigurationName) AS rn
                    FROM dbo.ETL_Configuration
                    WHERE ConfigurationName LIKE ''ClientID%''
                ),
                FtpUser AS
                (
                    SELECT ConfigurationValue AS FtpUserName
                    FROM dbo.ETL_Configuration
                    WHERE ConfigurationName = ''ftpUserName''
                )
                INSERT INTO admindba.dbo.ETLTempTable (DatabaseName, ClientCode, ftppass, FtpUserName)
                SELECT 
                    '''+@DB+''' AS DatabaseName,
                    c.ClientCode,
                    f.ftppass,
                    fu.FtpUserName
                FROM FtpPasswords f
                JOIN ClientCodes c ON f.rn = c.rn
                CROSS JOIN FtpUser fu;';  -- same FTP username applied to all rows
                    
                EXEC (@sql);
            END
        END
    END TRY
    BEGIN CATCH
        PRINT 'Error processing database: ' + @DB + ' | ' + ERROR_MESSAGE();
    END CATCH

    FETCH NEXT FROM curDB INTO @DB  
END  

CLOSE curDB  
DEALLOCATE curDB;
