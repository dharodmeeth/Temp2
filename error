-- ===========================================
-- Step 1: Collect ftpPassword + ClientCode (SourceCode) from all databases into mytest
-- ===========================================
DECLARE @sql NVARCHAR(max), @DBLevel NVARCHAR(250)
DECLARE @DB sysname  

DECLARE curDB CURSOR FORWARD_ONLY STATIC FOR  
   SELECT [name]   
   FROM MSDB.sys.databases 
   WHERE [name] NOT IN ('master','model','msdb','tempdb','DefaultDB','admindba','iws_admin') 
     AND name NOT LIKE '%SP'
     AND name NOT LIKE '%snapshot%'
     AND name NOT LIKE '%stg'
     AND name NOT LIKE '%_old'
     AND state_desc NOT LIKE '%RESTORING%'
   ORDER BY [name];

-- Recreate staging table
IF OBJECT_ID('admindba.dbo.mytest','U') IS NOT NULL DROP TABLE admindba.dbo.mytest;
CREATE TABLE admindba.dbo.mytest
(
    dbname     VARCHAR(100),
    ClientCode NVARCHAR(200),        -- NEW: store SourceCode/ClientID
    ftppass    NVARCHAR(256)
);

OPEN curDB  
FETCH NEXT FROM curDB INTO @DB  
WHILE @@FETCH_STATUS = 0  
BEGIN 
    IF OBJECT_ID(N'['+@DB+'].dbo.ETL_Configuration') IS NOT NULL  
    BEGIN 
        -- Grab any SourceCode present in that DB
        SET @sql = N'
        USE '+QUOTENAME(@DB)+';
        INSERT INTO admindba.dbo.mytest (dbname, ClientCode, ftppass)
        SELECT TOP (1)
            DB_NAME() AS dbname,
            sc.ConfigurationValue AS ClientCode,        -- NEW: SourceCode / ClientID
            CONVERT(NVARCHAR(MAX),
                DECRYPTBYKEYAUTOCERT(CERT_ID(''CertificateETLFTP''), NULL, pw.ConfigurationEncrypted)
            ) AS ftppass
        FROM dbo.ETL_Configuration sc
        INNER JOIN dbo.ETL_Configuration pw
            ON 1=1
        WHERE sc.ConfigurationName IN (''SourceCode'', ''ClientID'')   -- NEW: pull client identifier
          AND pw.ConfigurationName = ''ftpPassword'';';
        
        PRINT @sql;  -- for debugging
        EXEC (@sql);
    END 
    FETCH NEXT FROM curDB INTO @DB  
END  

CLOSE curDB  
DEALLOCATE curDB;

-- Optional: review staging table
SELECT * FROM admindba.dbo.mytest;
